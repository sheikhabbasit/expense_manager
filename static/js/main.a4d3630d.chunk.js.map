{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpenseFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/ExpenseBlock.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","presetYear","onChange","e","console","log","target","setYear","ExpenseDate","month","date","toLocaleString","day","year","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPoints","dataPointValues","dataPoint","totalMaximum","max","datapoint","ExpensesChart","chartDataPoints","expenses","getMonth","ExpenseBlock","useState","selectedYear","setSelectedYear","filtered","filter","getFullYear","toString","receivedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","dummyExpenses","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a4d3630d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Card.css\";\r\n\r\nfunction Card(props) {\r\n  const classes = \"card \" + props.className;\r\n  return <div className={classes}>{props.children}</div>;\r\n}\r\nexport default Card;\r\n","import React from \"react\";\r\n\r\nimport \"./ExpenseFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const emitTheYear = (e) => {\r\n    console.log(e.target.value);\r\n    props.setYear(e.target.value);\r\n  };\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.presetYear} onChange={emitTheYear}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import React from \"react\";\r\nimport \"./ExpenseDate.css\";\r\nfunction ExpenseDate(props) {\r\n  const month = props.date.toLocaleString(\"en-GB\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-GB\", { day: \"numeric\" });\r\n  const year = props.date.toLocaleString(\"en-GB\", { year: \"numeric\" });\r\n\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseDate;\r\n","import React /*, { useState } */ from \"react\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./ExpenseItem.css\";\r\n\r\nfunction ExpenseItem(props) {\r\n  /*\r\n  const [title, setTitle] = useState(props.title);\r\n\r\n  const clickHandler = () => {\r\n    setTitle(\"updated\");\r\n    console.log(title);\r\n  };\r\n  */\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date} />\r\n        <div className=\"expense-item__description\">\r\n          <h2>{props.title}</h2>\r\n          <div className=\"expense-item__price\">${props.amount}</div>\r\n        </div>\r\n        {/* <button onClick={clickHandler}>Change Title</button> */}\r\n      </Card>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;\r\n","import React from \"react\";\r\nimport \"./ExpensesList.css\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\n\r\nconst ExpensesList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">Found No Expense!</h2>;\r\n  }\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.items.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\nexport default ExpensesList;\r\n","import React from \"react\";\r\n\r\nimport \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = \"0%\";\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import React from \"react\";\r\nimport ChartBar from \"./ChartBar\";\r\nimport \"./Chart.css\";\r\n\r\nconst Chart = (props) => {\r\n  console.log(props.dataPoints);\r\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointValues);\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((datapoint) => (\r\n        <ChartBar\r\n          key={datapoint.label}\r\n          value={datapoint.value}\r\n          maxValue={totalMaximum}\r\n          label={datapoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\nexport default Chart;\r\n","import React from \"react\";\r\nimport Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth();\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\nexport default ExpensesChart;\r\n","import React, { useState } from \"react\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpenseFilter\";\r\nimport \"./ExpenseBlock.css\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\n\r\nfunction ExpenseBlock(props) {\r\n  const [selectedYear, setSelectedYear] = useState(\"2020\");\r\n  const filterYear = (receivedYear) => {\r\n    // console.log(receivedYear, \"ExpenseBlock\");\r\n    setSelectedYear(receivedYear);\r\n    console.log(selectedYear, \"selected year\");\r\n  };\r\n  const filtered = props.items.filter(\r\n    (expense) => expense.date.getFullYear().toString() === selectedYear\r\n  );\r\n  // console.log(filtered);\r\n  // const dateYear = props.date.toLocaleString(\"en-GB\", { year: \"numeric\" });\r\n  // console.log(dateYear);\r\n\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpensesFilter presetYear={selectedYear} setYear={filterYear} />\r\n      <ExpensesChart expenses={filtered} />\r\n      <ExpensesList items={filtered} />\r\n    </Card>\r\n  );\r\n}\r\nexport default ExpenseBlock;\r\n","import React, { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\nconst ExpenseForm = (props) => {\r\n  // Destructuring of State Functions\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n  /* Single state to handle all the values */\r\n  // const [userinput, setUserInput] = useState({\r\n  //   enteredTitle: \"\",\r\n  //   enteredAmount: \"\",\r\n  //   enteredDate: \"\",\r\n  // });\r\n\r\n  // Event Listeners\r\n  const titleChangeHandler = (e) => {\r\n    setEnteredTitle(e.target.value);\r\n\r\n    /* While we set the state values for one event, we must take care to incorporate for all the state values, because if we care for just one value, the others will be vanished, that's why we incorporate the spread operator, that we override in the next line itself  */\r\n\r\n    // setUserInput({\r\n    //   ...userinput,\r\n    //   enteredTitle: e.target.value,\r\n    // });\r\n\r\n    /* An alternative way is to add an arrow function to the setUserInput function, it automatically receives previous state, and this arrow function is automatically executed by react */\r\n\r\n    // setUserInput((prevState) => {\r\n    //   console.log(prevState);\r\n    //   return { ...prevState, enteredTitle: e.target.value };\r\n    // });\r\n\r\n    console.log(e.target.value);\r\n  };\r\n\r\n  const amountChangeHandler = (e) => {\r\n    setEnteredAmount(e.target.value);\r\n\r\n    // setUserInput({\r\n    //   ...userinput,\r\n    //   enteredAmount: e.target.value,\r\n    // });\r\n\r\n    // setUserInput((prevState) => {\r\n    //   console.log(prevState);\r\n    //   return { ...prevState, enteredAmount: e.target.value };\r\n    // });\r\n\r\n    console.log(e.target.value);\r\n  };\r\n\r\n  const dateChangeHandler = (e) => {\r\n    setEnteredDate(e.target.value);\r\n    // setUserInput({\r\n    //   ...userinput,\r\n    //   enteredDate: e.target.value,\r\n    // });\r\n    // setUserInput((prevState) => {\r\n    //   console.log(prevState);\r\n    //   return { ...prevState, enteredDate: e.target.value };\r\n    // });\r\n    console.log(e.target.value);\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n    console.log(expenseData);\r\n\r\n    props.onSaveExpenseData(expenseData);\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n    setEnteredTitle(\"\");\r\n  };\r\n\r\n  // const openForm = () => {\r\n  //   renderForm = ;\r\n  // };\r\n  // const renderForm = (\r\n  //   <div className=\"new-expense__actions\">\r\n  //     <button onClick={openForm}>Add Expense</button>\r\n  //   </div>\r\n  // );\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label className=\"lab\">Title</label>\r\n          <input\r\n            onChange={titleChangeHandler}\r\n            value={enteredTitle}\r\n            type=\"text\"\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            onChange={amountChangeHandler}\r\n            value={enteredAmount}\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            onChange={dateChangeHandler}\r\n            value={enteredDate}\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"button\" onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nexport default ExpenseForm;\r\n","import React, { useState } from \"react\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport \"./NewExpense.css\";\r\n\r\nconst NewExpense = (props) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  // To get data from a child component, we create a function in the parent file, add that function as a prop to the parent component. We call the same function in child file like this:\r\n\r\n  // props.functionName(data)\r\n\r\n  // Which then passes the data to the parent file as an argument to the function and then we are able to process that data.\r\n\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    // enteredExpenseData is received from the child element, which we then store into expenseData variable below\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    // Forwarding the data to AppJs\r\n    props.onAddExpense(expenseData);\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const startEditingHandler = () => {\r\n    setIsEditing(true);\r\n  };\r\n  const stopEditingHandler = () => {\r\n    setIsEditing(false);\r\n  };\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isEditing && (\r\n        <button onClick={startEditingHandler}>Add New Expense</button>\r\n      )}\r\n      {isEditing && (\r\n        <ExpenseForm\r\n          onCancel={stopEditingHandler}\r\n          onSaveExpenseData={saveExpenseDataHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import React, { useState } from \"react\";\nimport ExpenseBlock from \"./components/Expenses/ExpenseBlock\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst dummyExpenses = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\nfunction App() {\n  const [expenses, setExpenses] = useState(dummyExpenses);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n    console.log(\"In AppJS\");\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <ExpenseBlock items={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}